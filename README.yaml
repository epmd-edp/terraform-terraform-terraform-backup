########################################################################################################################
########################################################################################################################
########################################################################################################################
#         DELETE ME
#
# This is the README configuration for the Example module itself.
# Delete this (up to and including the line with `---`) and fill in
# the template below the dashes

# Name of this project
name: terraform-example-module

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo: cloudposse/terraform-example-module

description: |-
  This is an example project to provide all the scaffolding for a typical well-built
  Terraform module for AWS resources. It's a template repository you can
  use when creating new repositories. This is not a useful module by itself.

quickstart: |-
  1. Use this repo as a template for a new repo.
  2. Check out the new repo and create a `git` branch to work on.
  3. Replace the Terraform code at the root of the repo with the code you want to publish.
  4. Replace the code in `examples/complete` with Terraform code that will make a good automated test.
     Please keep `context.tf` and `fixtures.us-east-2.tfvars` in place and change only `name`, leaving
     `region`, `namespace`, `environment`, and `stage` as is. Provide outputs that will be useful for testing.
  5. Update `test/src/examples_complete_test.go` to verify the outputs of running `terraform apply` on `examples/complete`.
  6. Run `make github/init` to update the repo with the current framework files (e.g. `CODEOWNERS`).
  7. Run `make pr/auto-format` to format the Terraform code and generate documentation.
  8. Commit everything to `git` and open your first PR on the new repo.
---
#         DELETE ME
#
# The above is the README configuration for the Example module itself.
# Delete from here to the top of file and fill in the template below
########################################################################################################################
########################################################################################################################
########################################################################################################################


#
# This is the canonical configuration for the `README.md`
# This file was automatically generated by the `build-harness`.
# 1) Make all changes to `README.yaml`
# 2) Run `make init` (you only need to do this once)
# 3) Run`make readme` to rebuild this file.
#

# Name of this project
name:

# Logo for this project
#logo: docs/logo.png

# License of this project
license: "APACHE2"

# Canonical GitHub repo
github_repo:

# List any resources helpful for someone to get started. For example, link to the hashicorp documentation or AWS documentation.
references:

# Short description of this project
description: |-
  Short
  description

# Introduction to the project
introduction: |-
  This is an introduction.

# How to get started quickly
quickstart: |-
  Here's how to get started...

# Other files to include in this README from the project folder
include:
  - "docs/targets.md"
  - "docs/terraform.md"
